{
  "name": "@nestjs-microservices-auth/source",
  "version": "0.0.0",
  "license": "MIT",
  "scripts": {
    "build:realtime-service": "nx build realtime-service",
    "serve:realtime-service": "nx serve realtime-service",
    "serve:api-gateway": "nx serve api-gateway",
    "serve:auth-service": "nx serve auth-service",
    "serve:user-service": "nx serve user-service",
    "serve:events-service": "nx serve events-service",
    "serve:orders-service": "nx serve orders-service",
    "start:all": "concurrently \"npm run serve:api-gateway\" \"npm run serve:auth-service\" \"npm run serve:user-service\" \"npm run serve:events-service\" \"npm run serve:orders-service\" \"npm run serve:realtime-service\"",
    "cockroach:start": "docker-compose up -d",
    "cockroach:stop": "docker-compose down",
    "cockroach:reset": "docker-compose down -v && docker-compose up -d",
    "cockroach:logs": "docker-compose logs -f",
    "cockroach:sql": "docker exec -it cockroach-node1 cockroach sql --insecure",
    "cockroach:status": "docker exec cockroach-node1 cockroach node status --insecure",
    "cockroach:check-tables": "docker exec cockroach-node1 cockroach sql --insecure --execute=\"USE orders_db; SHOW TABLES;\"",
    "cockroach:check-orders": "docker exec cockroach-node1 cockroach sql --insecure --execute=\"USE orders_db; SELECT * FROM \\\"order\\\" LIMIT 10;\"",
    "serve:orders-cockroach": "cross-env DB_TYPE=cockroachdb DB_HOST=localhost DB_PORT=26260 DB_USERNAME=orders_user DB_PASSWORD= DB_NAME=orders_db npm run serve:orders-service",
    "start:all-cockroach": "npm run cockroach:start && concurrently \"npm run serve:api-gateway\" \"npm run serve:auth-service\" \"npm run serve:user-service\" \"npm run serve:events-service\" \"npm run serve:orders-cockroach\" \"npm run serve:realtime-service\"",
    "test": "nx test",
    "lint": "nx lint",
    "debug:db-connection": "node debug-database-connection.js",
    "cockroach:reset-schema": "node reset-cockroach-schema.js",
    "cockroach:create-sample-order": "node -e \"console.log('Creating sample order...'); const axios = require('axios'); axios.post('http://localhost:3000/api/orders', {eventId: 1, categoryId: 1, quantity: 2, notes: 'Test order for CockroachDB'}, {headers: {'Authorization': 'Bearer test-token'}}).then(res => console.log('Order created:', res.data)).catch(err => console.log('Error:', err.response?.data || err.message));\"",
    "cockroach:view-data": "node view-cockroach-data.js"
  },
  "private": true,
  "dependencies": {
    "@nestjs/common": "^11.1.1",
    "@nestjs/core": "^11.1.1",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/microservices": "^11.1.1",
    "@nestjs/platform-express": "^11.1.1",
    "@nestjs/platform-socket.io": "^11.1.1",
    "@nestjs/typeorm": "^11.0.0",
    "@nestjs/websockets": "^11.1.1",
    "amqp-connection-manager": "^4.1.14",
    "amqplib": "^0.10.8",
    "axios": "^1.9.0",
    "bcrypt": "^6.0.0",
    "pg": "^8.16.3",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.2",
    "socket.io": "^4.8.1",
    "typeorm": "^0.3.25",
    "uuid": "^11.1.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.26.0",
    "@nestjs/schematics": "^11.0.5",
    "@nestjs/testing": "^11.1.1",
    "@nx/eslint": "21.0.3",
    "@nx/eslint-plugin": "21.0.3",
    "@nx/jest": "21.0.3",
    "@nx/js": "21.0.3",
    "@nx/nest": "21.0.3",
    "@nx/node": "21.0.3",
    "@nx/web": "21.0.3",
    "@nx/webpack": "21.0.3",
    "@nx/workspace": "21.0.3",
    "@swc-node/register": "~1.10.10",
    "@swc/core": "~1.11.24",
    "@swc/helpers": "~0.5.17",
    "@types/bcrypt": "^5.0.2",
    "@types/jest": "^29.5.14",
    "@types/node": "~22.15.18",
    "@types/uuid": "^10.0.0",
    "concurrently": "^9.1.0",
    "cross-env": "^7.0.3",
    "eslint": "^9.26.0",
    "eslint-config-prettier": "^10.1.5",
    "jest": "^29.7.0",
    "jest-environment-node": "^29.7.0",
    "nx": "21.0.3",
    "prettier": "^3.5.3",
    "ts-jest": "^29.3.3",
    "ts-node": "10.9.2",
    "tslib": "^2.8.1",
    "typescript": "~5.8.3",
    "typescript-eslint": "^8.32.1",
    "webpack-cli": "^6.0.1"
  }
}
